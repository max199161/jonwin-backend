version: '3.8'

services:
  strapi:
    build:
      context: .
      dockerfile: Dockerfile
    image: strapi:latest
    restart: unless-stopped
    env_file: .env.docker
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: strapiDB
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET:-your-super-secret-admin-jwt-token}
      APP_KEYS: ${APP_KEYS:-your-app-keys}
      API_TOKEN_SALT: ${API_TOKEN_SALT:-your-api-token-salt}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT:-your-transfer-token-salt}
      NODE_ENV: production
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/app/package.json
      - ./yarn.lock:/opt/app/yarn.lock
      - uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    image: postgres:17-alpine
    restart: unless-stopped
    env_file: .env.docker
    environment:
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
      POSTGRES_DB: strapi
    volumes:
      - strapi-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
      - ./scripts:/scripts
    ports:
      - '5432:5432'
    networks:
      - strapi

  strapiAdminer:
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=strapiDB
    networks:
      - strapi
    depends_on:
      - strapiDB

volumes:
  strapi-data:
  uploads:

networks:
  strapi:
    name: Strapi
    driver: bridge
